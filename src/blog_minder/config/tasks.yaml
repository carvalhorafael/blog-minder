fetch_all_posts_task:
  description: >
    Fetch all blog posts.
    Save these posts to a CSV file.
  expected_output: >
    A string with the path of the CSV file containing the content of the posts.

identify_posts_cannibalization_task:
  description: >
    Read a CSV file containing all posts from a blog and identify duplicate and similar posts.
    Create a JSON file at {result_of_analysis_path} containing a list of all duplicate and similar posts.
  expected_output: >
    A JSON file at {result_of_analysis_path} with duplicates and similarities.
  
decide_winning_post:
  description: >
    You will receive a JSON with two duplicate or similar posts. 
    The JSON has the following information about the posts:
      - post01_id: field with an integer that identifies the blog post
      - title: post title
      - link: public link of the post
      - seo_keyword: the focus keyword of the post

    Frist, for each of the two posts you must:
      1. Access the post content at the blog hosted at {blog_url} usind {post01_id} and after {post02_id}

    After having the content of the two posts, their link and title, you must:
      1. Analyze the content of both posts
      2. Decide which of the two posts has the largest and most complete content.
        2.1 This post must be declared a winner and the other a loser
      3. Return a JSON string with data from the winning and losing posts
        3.1 The JSON format you must return must be:
          winner: 
            id: integer with the post id
            title: string with the title of the post
            link: string with post link,
            seo_keyword: string with the post's focus keyword
            justification: string justification for why you consider this post a winner
          loser:
            id: integer with the post id,
            title: string with the title of the post,
            link: string with post link,
            seo_keyword: string with the post's focus keyword
            justification: string justification for why you consider this post a loser
          
  expected_output: >
    A JSON string with data from the winning and losing posts
    The JSON format you must return must be:
      winner: 
        id: integer with the winner post id
        title: string with the title of the winner post
        link: string with winner post link,
        seo_keyword: string with the winner post's focus keyword
        justification: string justification for why you consider this post a winner
      loser:
        id: integer with the loser post id,
        title: string with the title of the loser post,
        link: string with loser post link,
        seo_keyword: string with the loser post's focus keyword
        justification: string justification for why you consider this post a loser


# recommend_post_actions_task:
#   description: >
#     For each set of duplicate posts, recommend which ones to keep, delete, or merge.
#   expected_output: >
#     Actionable recommendations for each set of duplicate posts.
#   agent: content_analyzer

# suggest_new_keywords_task:
#   description: >
#     Analyze current keyword coverage and suggest new posts to cover important keywords not currently addressed.
#   expected_output: >
#     A list of new post topics with suggested keywords.
#   agent: seo_strategist

# merge_content_task:
#   description: >
#     Provide specific recommendations on how to merge duplicate posts into a single optimized post.
#   expected_output: >
#     Detailed merging guidelines for each set of duplicate posts.
#   agent: content_merger
